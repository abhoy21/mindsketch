version: "3.9"

services:
  redis:
    image: redis:alpine
    ports:
      - 6379:6379
    volumes:
      - redis_data:/var/lib/redis/data

  postgres:
    image: postgres:17
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_DB=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  http-server:
    build:
      context: .
      dockerfile: docker/Dockerfile.http-server
    environment:
      - DATABASE_URL=postgresql://postgres:mysecretpassword@postgres:5432/postgres
      - JWT_SECRET=t+WeCZ3HC4HC2UZM5YA/rxaGbV2WfsoK6mWWj+CBPuw=
      - GEMINI_API_KEY=place_your_own_api_key_here
      - ACCESS_TOKEN_EXPIRES_IN=3600
      - REFRESH_TOKEN_EXPIRES_IN=604800
    ports:
      - 8000:8000
    depends_on:
      - postgres

  ws-server:
    build:
      context: .
      dockerfile: docker/Dockerfile.ws-server
    environment:
      - DATABASE_URL=postgresql://postgres:mysecretpassword@postgres:5432/postgres
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=t+WeCZ3HC4HC2UZM5YA/rxaGbV2WfsoK6mWWj+CBPuw=
      - GEMINI_API_KEY=place_your_own_api_key_here
      - ACCESS_TOKEN_EXPIRES_IN=3600
      - REFRESH_TOKEN_EXPIRES_IN=604800
    ports:
      - 8080:8080
    depends_on:
      - postgres
      - redis

  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    environment:
      - DATABASE_URL=postgresql://postgres:mysecretpassword@postgres:5432/postgres
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis

  web:
    build:
      context: .
      dockerfile: docker/Dockerfile.web
    environment:
      - NEXT_PUBLIC_API_URL=http://http-server:8000
      - NEXT_PUBLIC_WS_URL=ws://ws-server:8080
    ports:
      - 3000:3000
    depends_on:
      - http-server
      - ws-server

volumes:
  postgres_data:
  redis_data:
