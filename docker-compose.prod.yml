version: "3.9"

services:
  redis:
    image: redis:alpine
    ports:
      - 6379:6379
    volumes:
      - redis_data:/var/lib/redis/data
    restart: always

  http-server:
    build:
      context: .
      dockerfile: docker/Dockerfile.http-server
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - ACCESS_TOKEN_EXPIRES_IN=${ACCESS_TOKEN_EXPIRES_IN}
      - REFRESH_TOKEN_EXPIRES_IN=${REFRESH_TOKEN_EXPIRES_IN}
      - REDIS_URL=redis://redis:6379
    ports:
      - 8000:8000
    restart: always
    depends_on:
      - redis

  ws-server:
    build:
      context: .
      dockerfile: docker/Dockerfile.ws-server
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - ACCESS_TOKEN_EXPIRES_IN=${ACCESS_TOKEN_EXPIRES_IN}
      - REFRESH_TOKEN_EXPIRES_IN=${REFRESH_TOKEN_EXPIRES_IN}
    ports:
      - 8080:8080
    restart: always
    depends_on:
      - http-server
      - redis

  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
    restart: always
    depends_on:
      - redis

  web:
    build:
      context: .
      dockerfile: docker/Dockerfile.web
    environment:
      - NEXT_PUBLIC_HTTP_URL=${NEXT_PUBLIC_HTTP_URL}
      - NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL}
    ports:
      - 3000:3000
    restart: always
    depends_on:
      - http-server
      - ws-server

volumes:
  redis_data:
